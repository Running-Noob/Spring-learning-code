<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        Spring提供的实例化方式第一种：通过构造方法实例化
        在Spring配置文件中直接配置类的全路径，Spring会自动调用该类的无参数构选方法米实例化Bean
    -->
    <bean id="springBean" class="com.f.spring6.bean.SpringBean"/>
    <!--
        Spring提供的实例化方式第二种：通过简单工厂模式实例化
        你需要在Spring配置文件中告诉Spring框架，调用哪个类的什么方法获取Bean
    -->
    <!--factory-method 属性指定的是工厂类当中的静态方法，也就是告诉Spring框架，调用这个方法来获取bean-->
    <!--创建出来的为产品对象，不为工厂对象，工厂类中的方法为静态方法，通过类名直接调用该静态方法，创建对象-->
    <bean id="star" class="com.f.spring6.bean.StarFactory" factory-method="get"/>
    <!--
        Spring提供的实例化方式第三种：通过工厂方法模式实例化
        通过factory-bean属性 + factory-method属性来共同完成
        factory-bean属性：告诉Spring调用哪个工厂对象，进行bean的创建
        factory-method属性：告诉Spring调用工厂对象的哪个实例方法创建bean
    -->
    <bean id="apple" factory-bean="appleFactory" factory-method="getFruit"/>
    <bean id="appleFactory" class="com.f.spring6.bean.AppleFactory"/>
    <!--
        Spring提供的实例化方式第四种：通过FactoryBean接口实例化
        这种方式实际上是第三种方式的简化
        由于你编写的类实现了FactoryBean接口，所以这个类是一个特殊的类，不需要你再手动指定：factory-bean、factory-method
    -->
    <!--
        通过一个特殊的工厂Bean：PersonFactoryBean
        来返回一个普通的Bean：Person对象
    -->
    <bean id="person" class="com.f.spring6.bean.PersonFactoryBean"/>

    <bean id="student" class="com.f.spring6.bean.Student">
        <property name="birth" ref="date"/>
    </bean>
    <!--通过DateFactoryBean这个工厂Bean来帮助我们创建Date Bean-->
    <bean id="date" class="com.f.spring6.bean.DateFactoryBean">
        <!--只要按yyyy-MM-dd格式输入，就能创建Date对象，因为我们已经在DateFactoryBean中定义了-->
        <constructor-arg name="strDate" value="2000-10-10"/>
    </bean>
</beans>